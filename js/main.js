"use strict";

function _createForOfIteratorHelper(r, e) { var t = "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"]; if (!t) { if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e && r && "number" == typeof r.length) { t && (r = t); var _n = 0, F = function F() {}; return { s: F, n: function n() { return _n >= r.length ? { done: !0 } : { done: !1, value: r[_n++] }; }, e: function e(r) { throw r; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var o, a = !0, u = !1; return { s: function s() { t = t.call(r); }, n: function n() { var r = t.next(); return a = r.done, r; }, e: function e(r) { u = !0, o = r; }, f: function f() { try { a || null == t["return"] || t["return"](); } finally { if (u) throw o; } } }; }
function _unsupportedIterableToArray(r, a) { if (r) { if ("string" == typeof r) return _arrayLikeToArray(r, a); var t = {}.toString.call(r).slice(8, -1); return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0; } }
function _arrayLikeToArray(r, a) { (null == a || a > r.length) && (a = r.length); for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e]; return n; }
var btnTry = document.querySelector('[data-id="btn_try"]');
var btnGo = document.querySelector('[data-id="btn_go"]');
var btnAgain = document.querySelector('[data-id="btn_again"]');
var hatches = document.querySelectorAll('[data-id="hatch"]');
var cars = document.querySelectorAll('[data-id="car"]');
var carKill = document.querySelector('[data-id="car_kill"]');
var chickenTooltip = document.querySelector('[data-id="tooltip"]');
var chicken = document.querySelector('[data-id="chicken"]');
var game = document.querySelector('[data-id="game"]');
var popup = document.querySelector('[data-id="popup"]');
var currentPosition = 42.5;
var tryTimes = 0;
var times = 0;
var step = 122.5;
var chickenMove = function chickenMove() {
  if (tryTimes === 1 && times === 4) return;
  var hatch = hatches[times];
  var percent = hatch.children[2].textContent;
  chickenTooltip.textContent = percent;
  times += 1;
  console.log(times);
  if (tryTimes === 1 && times === 4) {
    carKill.classList.add('active');
    setTimeout(function () {
      chicken.children[0].classList.remove('active');
      chicken.children[1].classList.add('active');
    }, 250);
    setTimeout(function () {
      btnAgain.classList.add('active');
      btnGo.classList.remove('active');
    }, 650);
  }
  if (times === 7) {
    currentPosition += 217.5;
    chicken.style.left = "".concat(currentPosition, "px");
    game.style.left = "-".concat(740, "px");
    setTimeout(function () {
      var hatch = hatches[6];
      hatch.children[0].classList.remove('active');
      hatch.children[1].classList.add('active');
      hatch.children[2].style.display = 'none';
      chickenTooltip.style.display = 'none';
    }, 250);
    setTimeout(function () {
      popup.style.display = 'flex';
    }, 1000);
    return;
  }
  currentPosition += step;
  chicken.style.left = "".concat(currentPosition, "px");
  game.style.left = "-".concat(currentPosition - 80, "px");
  if (times > 1 && 7 > times) {
    cars[times - 2].classList.add('active');
  }
};
btnTry.addEventListener('click', function () {
  btnGo.classList.add('active');
  btnTry.classList.remove('active');
  tryTimes += 1;
  chickenMove();
  setTimeout(function () {
    chickenTooltip.classList.add('active');
  }, 200);
});
btnGo.addEventListener('click', function () {
  btnGo.classList.add('active');
  btnTry.classList.remove('active');
  chickenMove();
  setTimeout(function () {
    var hatch = hatches[times - 2];
    hatch.children[0].classList.remove('active');
    hatch.children[1].classList.add('active');
    hatch.children[2].style.display = 'none';
  }, 100);
});
btnAgain.addEventListener('click', function () {
  if (times === 0) return;
  currentPosition = 42.5;
  times = 0;
  chicken.style.left = "".concat(currentPosition, "px");
  game.style.left = 0;
  btnAgain.classList.remove('active');
  chickenTooltip.classList.remove('active');
  setTimeout(function () {
    btnAgain.classList.remove('active');
    chickenTooltip.classList.remove('active');
    btnTry.classList.add('active');
  }, 200);
  var _iterator = _createForOfIteratorHelper(hatches),
    _step;
  try {
    for (_iterator.s(); !(_step = _iterator.n()).done;) {
      var hatch = _step.value;
      hatch.children[0].classList.add('active');
      hatch.children[1].classList.remove('active');
      hatch.children[2].style.display = 'flex';
    }
  } catch (err) {
    _iterator.e(err);
  } finally {
    _iterator.f();
  }
  var _iterator2 = _createForOfIteratorHelper(cars),
    _step2;
  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var car = _step2.value;
      car.classList.remove('active');
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }
  carKill.classList.remove('active');
  chicken.children[1].classList.remove('active');
  chicken.children[0].classList.add('active');
});
"use strict";
//# sourceMappingURL=data:application/json;charset=utf8;base64,
